import fdb

import click
from flask import current_app, g
from flask.cli import with_appcontext


def init_db():
    try:
        conn = fdb.connect(
            dsn=current_app.config['DATABASE'],
            user=current_app.config['USER'],
            password=current_app.config['PASSWORD'],
            fb_library_name=current_app.config['LIBRARY'],
            utf8params=True
        )
        conn.drop_database()
    except Exception as e:
        print(e)


    conn = fdb.create_database(
        dsn=current_app.config['DATABASE'],
        user=current_app.config['USER'],
        password=current_app.config['PASSWORD'],
        fb_library_name=current_app.config['LIBRARY']
    )

    metadata = [
        '''
        RECREATE TABLE users (
            id integer generated by default as identity primary key,
            username varchar(256) UNIQUE NOT NULL,
            password varchar(256) NOT NULL
        )
        '''
        ,
        '''
            RECREATE TABLE product (
        id integer generated by default as identity primary key,
        name varchar(256)  NOT NULL,
        type varchar(256) NOT NULL,
        size varchar(256) NOT NULL,
        price varchar(256) NOT NULL,
        quantity varchar(256) NOT NULL
    )
        
        '''
        ,
        '''
                    RECREATE TABLE cart (
                id integer generated by default as identity primary key,
                name varchar(256)  NOT NULL,
                type varchar(256) NOT NULL,
                size varchar(256) NOT NULL,
                price varchar(256) NOT NULL,
                quantity varchar(256) NOT NULL,
                author_id varchar(256) NOT NULL
                
            )
    
                '''

        ,
        '''
                            RECREATE TABLE orders (
                        id integer generated by default as identity primary key,
                        address varchar(256) NOT NULL,
                        sposob varchar(256) NOT NULL,
                        contact varchar(256) NOT NULL,
                        suma varchar(256) NOT NULL,
                        author_id varchar(256) NOT NULL
    
                    )
    
                        '''
    ]

    cursor = conn.cursor()

    for query in metadata:
        cursor.execute(query)

    conn.commit()


def get_db():
    if 'db' not in g:
        g.db = fdb.connect(
            dsn=current_app.config['DATABASE'],
            user=current_app.config['USER'],
            password=current_app.config['PASSWORD'],
            fb_library_name=current_app.config['LIBRARY']
        )

    return g.db


def close_db(e=None):
    db = g.pop('db', None)

    if db is not None:
        db.close()


@click.command('init-db')
@with_appcontext
def init_db_command():
    """Clear the existing data and create new tables."""
    init_db()
    click.echo('Initialized the database.')


def init_app(app):
    app.teardown_appcontext(close_db)
    app.cli.add_command(init_db_command)